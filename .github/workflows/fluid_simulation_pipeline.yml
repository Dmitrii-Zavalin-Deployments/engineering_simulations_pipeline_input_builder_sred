name: Fluid Particle Simulation and Commit

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  process_fluid_data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"  # Keeping Python 3.9 for compatibility

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install system dependencies (TBB required)
        run: |
          sudo apt-get update
          sudo apt-get install -y libtbb-dev

      - name: Install Python dependencies
        run: |
          pip install --upgrade numpy h5py scipy pytest dropbox
          pip install -r requirements.txt

      - name: Debug Repository Structure
        run: ls -R "$GITHUB_WORKSPACE"

      - name: Delete All Previous Files in Testing-Input-Output
        run: |
          if [ -d "$GITHUB_WORKSPACE/data/testing-input-output/" ]; then
            rm -rf "$GITHUB_WORKSPACE/data/testing-input-output/*"
            echo "üóëÔ∏è Deleted all files inside data/testing-input-output/."
          else
            echo "‚ÑπÔ∏è No previous files found in data/testing-input-output/‚Äîproceeding with new generation."
          fi
      
      - name: Make `download_from_dropbox.sh` Executable
        run: chmod +x src/download_from_dropbox.sh
  
      - name: Download Simulation Files from Dropbox
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: src/download_from_dropbox.sh

      - name: Run Fluid Particle Processing Script
        env:
          OUTPUT_FORMAT: json  # Output remains JSON
        run: |
          cd "$GITHUB_WORKSPACE/src"
          python input_builder.py

      - name: Debug Directory After Processing
        run: ls -R "$GITHUB_WORKSPACE/data/testing-input-output"

      # ‚úÖ Execute Unit & Integration Tests After Output File Generation
      - name: Run All Tests
        run: pytest tests/ --verbose

      - name: Make `upload_to_dropbox.sh` Executable
        run: chmod +x src/upload_to_dropbox.sh
  
      - name: Debug Before Dropbox Upload
        run: |
          echo "üîç Checking directory structure before upload..."
          ls -R $GITHUB_WORKSPACE
  
      - name: Upload Fluid Simulation Input to Dropbox
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        run: src/upload_to_dropbox.sh

      - name: üìù Log trigger for STEP processor
        run: |
          echo "$(date '+%Y-%m-%d %H:%M:%S'): STEP processor triggered by '${{ github.actor }}' via '${{ github.event_name }}' event" >> trigger.txt

      - name: üöÄ Commit and push trigger log
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git config --global user.name "${GIT_USER_NAME}"
          git config --global user.email "${GIT_USER_EMAIL}"
          git pull --rebase origin main || echo "‚ö†Ô∏è Pull failed or not needed"
          git add trigger.txt
          git commit -m "Log STEP processor trigger by ${{ github.actor }} via ${{ github.event_name }}"
          git push
