name: Fluid Particle Simulation and Commit

on:
  push:
    branches:
      - "**"
  workflow_dispatch:

jobs:
  process_fluid_data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"  # Keeping Python 3.9 for compatibility

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install system dependencies (TBB required)
        run: |
          sudo apt-get update
          sudo apt-get install -y libtbb-dev

      - name: Install Python dependencies
        run: |
          pip install --upgrade numpy h5py scipy pytest
          pip install -r requirements.txt

      - name: Debug Repository Structure
        run: ls -R "$GITHUB_WORKSPACE"

      - name: Verify Script Exists
        run: |
          echo "üîé Checking if generate_blender_format.py exists..."
          ls -R "$GITHUB_WORKSPACE/src"

          if [ ! -f "$GITHUB_WORKSPACE/src/generate_blender_format.py" ]; then
            echo "‚ùå Error: generate_blender_format.py not found!"
            exit 1
          else
            echo "‚úÖ Script found: generate_blender_format.py"
          fi

      - name: Run Fluid Particle Processing Script
        env:
          OUTPUT_FORMAT: json  # Output remains JSON
        working-directory: "$GITHUB_WORKSPACE/src"
        run: python generate_blender_format.py

      - name: Debug Directory After Processing
        run: ls -R "$GITHUB_WORKSPACE/data/testing-input-output"

      # ‚úÖ Execute Unit & Integration Tests After Output File Generation
      # - name: Run Unit Tests
      #   run: pytest tests/test_velocity_field_processing.py --verbose

      - name: Commit and Push Fluid Particle Data to Repository
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
        run: |
          git config --global user.name "${GIT_USER_NAME}"
          git config --global user.email "${GIT_USER_EMAIL}"

          cd "$GITHUB_WORKSPACE"

          if [ -f "data/testing-input-output/fluid_particles.json" ]; then
            git add "data/testing-input-output/fluid_particles.json"
            git status

            if [[ $(git diff --cached --quiet; echo $?) -ne 0 ]]; then
              git commit -m "Auto-update: Generated fluid particle motion data"
              git push origin HEAD
            else
              echo "‚úÖ No changes to commit!"
            fi
          else
            echo "‚ùå No fluid_particles.json file detected, skipping commit."
          fi
